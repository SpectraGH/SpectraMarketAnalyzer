<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Metal Price Tracker</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            padding: 20px;
            background-color: #f4f4f9;
        }
        .header {
            text-align: center;
            margin-bottom: 30px;
        }
        .price-card {
            background-color: #ffffff;
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            text-align: center;
            transition: transform 0.3s, box-shadow 0.3s;
        }
        .price-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
        }
        .price-value {
            font-size: 28px;
            font-weight: bold;
            color: #28a745;
        }
        .metal-name {
            font-size: 20px;
            font-weight: 600;
            margin-bottom: 10px;
            color: #343a40;
        }
        .chart-container {
            background-color: #ffffff;
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            margin-top: 30px;
            overflow-x: auto; /* Enable horizontal scrolling for charts on small screens */
            display: flex;
            justify-content: center; /* Center the chart on smaller screens */
        }
        canvas {
            max-width: 100%; /* Ensure charts scale properly on smaller screens */
            height: 500px !important; /* Set chart height to 500px */
        }
        .footer {
            text-align: center;
            margin-top: 40px;
            color: #6c757d;
            font-size: 14px;
        }
        .form-label {
            font-weight: 600;
            color: #495057;
        }
        #calculatedPrice {
            font-size: 24px;
            font-weight: bold;
            color: #007bff;
            text-align: center;
            margin-top: 20px;
        }
             /* Responsive styles for smaller screens */
             @media (max-width: 768px) {
            .price-card {
                margin-bottom: 20px; /* Add spacing between cards on smaller screens */
            }
            .chart-container {
                margin-top: 20px; /* Reduce margin for charts on smaller screens */
                padding: 10px; /* Reduce padding for smaller screens */
            }
            canvas {
                height: 500px !important; /* Set chart height to 500px on mobile */
            }
            h2 {
                font-size: 1.5rem; /* Adjust heading size for smaller screens */
            }
        }
        #loadingScreen {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(255, 255, 255, 0.9);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 9999;
            font-size: 1.5rem;
            color: #007bff;
            font-weight: bold;
        }
        #errorMessage {
            color: red;
            font-size: 1rem;
            text-align: center;
            margin-top: 20px;
        }
    </style>
</head>
<body>
    <div id="loadingScreen">Loading...</div>
    <div class="container" style="display: none;" id="mainContent">
        <div class="header">
            <h1>ðŸ“Š Precious Metal Price Tracker</h1>
            <p class="lead">Live Prices and Historical Trends</p>
        </div>

        <h2 class="mb-4">Current Prices (USD per gram)</h2>
        <div id="errorMessage"></div>
        <div class="row mb-4">
            <div class="col-md-3 mb-3">
                <div class="price-card">
                    <div class="metal-name">Gold</div>
                    <div class="price-value">$<%= metalPrices.Gold ? metalPrices.Gold.toFixed(2) : '0.00' %></div>
                </div>
            </div>
            <div class="col-md-3 mb-3">
                <div class="price-card">
                    <div class="metal-name">Silver</div>
                    <div class="price-value">$<%= metalPrices.Silver ? metalPrices.Silver.toFixed(2) : '0.00' %></div>
                </div>
            </div>
            <div class="col-md-3 mb-3">
                <div class="price-card">
                    <div class="metal-name">Platinum</div>
                    <div class="price-value">$<%= metalPrices.Platinum ? metalPrices.Platinum.toFixed(2) : '0.00' %></div>
                </div>
            </div>
            <div class="col-md-3 mb-3">
                <div class="price-card">
                    <div class="metal-name">Palladium</div>
                    <div class="price-value">$<%= metalPrices.Palladium ? metalPrices.Palladium.toFixed(2) : '0.00' %></div>
                </div>
            </div>
        </div>

        <h2 class="mb-4">Calculate Price</h2>
        <div class="row mb-4">
            <div class="col-md-6">
                <label for="metalSelect" class="form-label">Select Metal</label>
                <select id="metalSelect" class="form-select">
                    <option value="Gold">Gold</option>
                    <option value="Silver">Silver</option>
                    <option value="Platinum">Platinum</option>
                    <option value="Palladium">Palladium</option>
                </select>
            </div>
            <div class="col-md-6">
                <label for="gramInput" class="form-label">Enter Weight (grams)</label>
                <input type="number" id="gramInput" min="0" class="form-control" placeholder="Enter grams">
            </div>
        </div>
        <div id="calculatedPrice">Price: $0.00</div>

        <h2 class="mb-4">Historical Price Charts</h2>
        <div class="row">
            <div class="col-md-6 mb-4">
                <div class="chart-container">
                    <canvas id="goldChart"></canvas>
                </div>
            </div>
            <div class="col-md-6 mb-4">
                <div class="chart-container">
                    <canvas id="silverChart"></canvas>
                </div>
            </div>
            <div class="col-md-6 mb-4">
                <div class="chart-container">
                    <canvas id="platinumChart"></canvas>
                </div>
            </div>
            <div class="col-md-6 mb-4">
                <div class="chart-container">
                    <canvas id="palladiumChart"></canvas>
                </div>
            </div>
        </div>

        <div class="footer">
            <hr>
            <p>Powered by Gilbert System ðŸ“Š</p>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Helper function to create gradient fills
        function createGradient(ctx, color) {
            const gradient = ctx.createLinearGradient(0, 0, 0, 400);
            gradient.addColorStop(0, color + '80'); // 50% opacity
            gradient.addColorStop(1, color + '00'); // Transparent
            return gradient;
        }

        // Chart.js configuration function
        function configureChart(ctx, data, label, borderColor, gradientColor) {
            const gradient = createGradient(ctx, gradientColor);
            return new Chart(ctx, {
                type: 'line',
                data: {
                    labels: data.dates,
                    datasets: [{
                        label: label,
                        data: data.prices,
                        borderColor: borderColor,
                        backgroundColor: gradient,
                        borderWidth: 2,
                        tension: 0.4,
                        fill: true,
                        pointRadius: 3,
                        pointBackgroundColor: borderColor
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'top',
                            labels: {
                                font: {
                                    size: 14
                                }
                            }
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    return `Price: $${context.raw.toFixed(2)}`;
                                }
                            }
                        },
                        title: {
                            display: true,
                            text: `${label} - Last Month`,
                            font: {
                                size: 16
                            }
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: false,
                            ticks: {
                                callback: function(value) {
                                    return `$${value}`;
                                }
                            }
                        }
                    }
                }
            });
        }

        // Show loading screen and hide main content initially
        const loadingScreen = document.getElementById('loadingScreen');
        const mainContent = document.getElementById('mainContent');
        const errorMessage = document.getElementById('errorMessage');

        function showError(message) {
            errorMessage.textContent = message;
            errorMessage.style.display = 'block';
        }

        function hideLoadingScreen() {
            loadingScreen.style.display = 'none';
            mainContent.style.display = 'block';
        }

        // Configure all charts
        try {
            const goldCtx = document.getElementById('goldChart').getContext('2d');
            configureChart(goldCtx, <%- JSON.stringify(goldData) %>, 'Gold Price (USD/oz)', '#FFD700', '#FFD700');

            const silverCtx = document.getElementById('silverChart').getContext('2d');
            configureChart(silverCtx, <%- JSON.stringify(silverData) %>, 'Silver Price (USD/oz)', '#C0C0C0', '#C0C0C0');

            const platinumCtx = document.getElementById('platinumChart').getContext('2d');
            configureChart(platinumCtx, <%- JSON.stringify(platinumData) %>, 'Platinum Price (USD/oz)', '#E5E4E2', '#E5E4E2');

            const palladiumCtx = document.getElementById('palladiumChart').getContext('2d');
            configureChart(palladiumCtx, <%- JSON.stringify(palladiumData) %>, 'Palladium Price (USD/oz)', '#8c8c8c', '#8c8c8c');

            hideLoadingScreen();
        } catch (error) {
            console.error('Error configuring charts:', error);
            showError('Failed to load charts. Please try again later.');
            hideLoadingScreen();
        }

        // Calculate price based on user input
        const metalPrices = <%- JSON.stringify(metalPrices) %>;
        const metalSelect = document.getElementById('metalSelect');
        const gramInput = document.getElementById('gramInput');
        const calculatedPrice = document.getElementById('calculatedPrice');

        gramInput.addEventListener('input', updatePrice);
        metalSelect.addEventListener('change', updatePrice);

        function updatePrice() {
            try {
                const selectedMetal = metalSelect.value;
                const grams = parseFloat(gramInput.value) || 0;
                const pricePerGram = metalPrices[selectedMetal] || 0;
                const totalPrice = grams * pricePerGram;
                calculatedPrice.textContent = `Price: $${totalPrice.toFixed(2)}`;
            } catch (error) {
                console.error('Error calculating price:', error);
                showError('Failed to calculate price. Please try again.');
            }
        }

        const socket = io();

        // Listen for real-time updates
        socket.on("updatePrices", (updatedPrices) => {
            try {
                document.querySelectorAll(".price-card").forEach((card, index) => {
                    const metalNames = ["Gold", "Silver", "Platinum", "Palladium"];
                    const metal = metalNames[index];
                    const priceValue = card.querySelector(".price-value");
                    if (priceValue && updatedPrices[metal]) {
                        priceValue.textContent = `$${updatedPrices[metal].toFixed(2)}`;
                    }
                });
            } catch (error) {
                console.error('Error updating prices:', error);
                showError('Failed to update prices. Please refresh the page.');
            }
        });
    </script>
</body>
</html>