<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Login - Spectra Metal Transactions</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css">
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f8f9fa;
            display: flex;
            align-items: center;
            justify-content: center;
            height: 100vh;
            margin: 0;
        }
        
        .login-container {
            max-width: 400px;
            width: 100%;
            padding: 20px;
        }
        
        .login-card {
            background-color: white;
            border-radius: 10px;
            box-shadow: 0 0 20px rgba(0,0,0,0.1);
            padding: 30px;
        }
        
        .logo-container {
            text-align: center;
            margin-bottom: 30px;
        }
        
        .logo {
            max-width: 120px;
            margin-bottom: 15px;
        }
        
        .login-title {
            font-size: 24px;
            font-weight: 600;
            color: #333;
            margin-bottom: 20px;
            text-align: center;
        }
        
        .form-control {
            height: 50px;
            border-radius: 5px;
            padding-left: 15px;
            font-size: 14px;
            border: 1px solid #ddd;
        }
        
        .form-control:focus {
            box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.25);
            border-color: #28a745;
        }
        
        .input-group-text {
            background-color: white;
            border-right: none;
            padding-right: 0;
        }
        
        .btn-login {
            background-color: #28a745;
            border-color: #28a745;
            height: 50px;
            font-weight: 600;
            font-size: 16px;
            width: 100%;
            margin-top: 10px;
        }
        
        .btn-login:hover {
            background-color: #218838;
            border-color: #1e7e34;
        }
        
        .alert {
            margin-bottom: 20px;
            font-size: 14px;
        }
        
        .back-link {
            display: block;
            text-align: center;
            margin-top: 20px;
            color: #6c757d;
            text-decoration: none;
        }
        
        .back-link:hover {
            color: #343a40;
        }
    </style>
</head>
<body>
    <div class="login-container">
        <div class="login-card">
            <div class="logo-container">
                <img src="https://static.wixstatic.com/media/bb6757_4ca9a0b59e614a1b992bbf048bc8d91d~mv2.jpg" alt="Spectra Metals Logo" class="logo">
                <h1 class="login-title">Admin Login</h1>
            </div>
            
            <% if (error) { %>
                <div class="alert alert-danger" role="alert">
                    <i class="bi bi-exclamation-triangle-fill me-2"></i> <%= error %>
                </div>
            <% } %>
            
            <div id="loading-indicator" class="alert alert-info d-none" role="alert">
                <i class="bi bi-hourglass-split me-2"></i> Checking Authentication...
            </div>
            
            <form id="login-form" action="/admin/login" method="POST">
                <div class="mb-3">
                    <label for="username" class="form-label">Username</label>
                    <div class="input-group">
                        <span class="input-group-text"><i class="bi bi-person"></i></span>
                        <input type="text" class="form-control" id="username" name="username" placeholder="Enter username" required autofocus>
                    </div>
                </div>
                
                <div class="mb-3">
                    <label for="password" class="form-label">Password</label>
                    <div class="input-group">
                        <span class="input-group-text"><i class="bi bi-lock"></i></span>
                        <input type="password" class="form-control" id="password" name="password" placeholder="Enter password" required>
                    </div>
                </div>
                
                <div class="mb-4 form-check">
                    <input type="checkbox" class="form-check-input" id="remember-me" name="remember-me" checked>
                    <label class="form-check-label" for="remember-me">Remember me</label>
                </div>
                
                <button type="submit" class="btn btn-login btn-success">
                    <i class="bi bi-box-arrow-in-right me-2"></i> Sign In
                </button>
            </form>
            
            <a href="/" class="back-link">
                <i class="bi bi-arrow-left me-1"></i> Back to Home
            </a>
        </div>
    </div>
    
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Function to get a cookie value by name
            function getCookie(name) {
                const value = `; ${document.cookie}`;
                const parts = value.split(`; ${name}=`);
                if (parts.length === 2) return parts.pop().split(';').shift();
                return null;
            }
            
            // Check if user is already logged in via localStorage or cookie
            let authToken = localStorage.getItem('spectra_admin_auth');
            
            // If no token in localStorage, try to get from cookie
            if (!authToken) {
                authToken = getCookie('spectra_admin_auth');
                // If found in cookie, also set in localStorage for future
                if (authToken) {
                    localStorage.setItem('spectra_admin_auth', authToken);
                }
            }
            
            const loginForm = document.getElementById('login-form');
            const loadingIndicator = document.getElementById('loading-indicator');
            
            if (authToken) {
                // Show loading indicator
                loadingIndicator.classList.remove('d-none');
                loginForm.classList.add('d-none');
                
                // Verify token with server
                fetch('/admin/verify-token', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ token: authToken })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.valid) {
                        // Token is valid, redirect to dashboard
                        window.location.href = '/admin/dashboard';
                    } else {
                        // Token is invalid, show login form
                        localStorage.removeItem('spectra_admin_auth');
                        loadingIndicator.classList.add('d-none');
                        loginForm.classList.remove('d-none');
                    }
                })
                .catch(error => {
                    console.error('Error verifying token:', error);
                    loadingIndicator.classList.add('d-none');
                    loginForm.classList.remove('d-none');
                });
            }
            
            // Handle form submission
            loginForm.addEventListener('submit', function(e) {
                e.preventDefault();
                
                const username = document.getElementById('username').value;
                const password = document.getElementById('password').value;
                const rememberMe = document.getElementById('remember-me').checked;
                
                // Show loading indicator during login
                loadingIndicator.classList.remove('d-none');
                loginForm.classList.add('d-none');
                
                fetch('/admin/login', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ 
                        username, 
                        password,
                        rememberMe
                    })
                })
                .then(response => {
                    if (response.redirected) {
                        // Login successful, store auth token if remember me is checked
                        if (rememberMe) {
                            const authToken = 'authenticated_' + Date.now();
                            localStorage.setItem('spectra_admin_auth', authToken);
                            
                            // Also set a cookie as a fallback for environments where localStorage might fail
                            document.cookie = `spectra_admin_auth=${authToken}; path=/; max-age=${7*24*60*60}`;
                        }
                        window.location.href = response.url;
                        return null; // Return null to prevent further processing
                    } else {
                        return response.json();
                    }
                })
                .then(data => {
                    if (data && data.error) {
                        // Display error message
                        const alertDiv = document.createElement('div');
                        alertDiv.className = 'alert alert-danger';
                        alertDiv.innerHTML = `<i class="bi bi-exclamation-triangle-fill me-2"></i> ${data.error}`;
                        
                        const existingAlert = document.querySelector('.alert');
                        if (existingAlert) {
                            existingAlert.replaceWith(alertDiv);
                        } else {
                            loginForm.insertBefore(alertDiv, loginForm.firstChild);
                        }
                        
                        // Show form again after error
                        loadingIndicator.classList.add('d-none');
                        loginForm.classList.remove('d-none');
                    } else if (data && data.success) {
                        // Handle successful login via API response
                        if (rememberMe) {
                            // Use token from server if available, otherwise generate one
                            const authToken = data.token || ('authenticated_' + Date.now());
                            localStorage.setItem('spectra_admin_auth', authToken);
                            
                            // Also set a cookie as a fallback for environments where localStorage might fail
                            document.cookie = `spectra_admin_auth=${authToken}; path=/; max-age=${7*24*60*60}`;
                        }
                        window.location.href = data.redirect || '/admin/dashboard';
                    }
                })
                .catch(error => {
                    console.error('Login error:', error);
                    // Show form again after error
                    loadingIndicator.classList.add('d-none');
                    loginForm.classList.remove('d-none');
                    
                    // Display generic error
                    const alertDiv = document.createElement('div');
                    alertDiv.className = 'alert alert-danger';
                    alertDiv.innerHTML = `<i class="bi bi-exclamation-triangle-fill me-2"></i> Login failed. Please try again.`;
                    
                    const existingAlert = document.querySelector('.alert');
                    if (existingAlert) {
                        existingAlert.replaceWith(alertDiv);
                    } else {
                        loginForm.insertBefore(alertDiv, loginForm.firstChild);
                    }
                });
            });
        });
    </script>
</body>
</html> 